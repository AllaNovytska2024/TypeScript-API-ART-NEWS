import { useFormik } from 'formik';
import * as Yup from 'yup';
import styles from './robotForm.module.css';

interface IFormValues {
  model: string;
  creator: string;
  email: string;
}


// * –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–µ (–≤–∞–ª–∏–¥–∞—Ü–∏—è)
// .required('error text) - —Ç—Ä–µ–±—É–µ—Ç —á—Ç–æ–±—ã –ø–æ–ª–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º
// .number() - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ–º —Ç–∏–ø–æ–≤, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ
// .string() -–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫—É
// .min(100, 'error text') - –Ω–µ –º–µ–Ω—å—à–µ 100 (—Å—Ç—Ä–æ–∫)
// .max(1000, 'error text') - –Ω–µ –±–æ–ª—å—à–µ 1000
// .positive() - —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
// .integer() - —Ç–æ–ª—å–∫–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ

// –æ–±—ä–µ–∫—Ç schema —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é Yup
const schema = Yup.object().shape({
  model: Yup
    .number()
    .typeError('—Ç–≤–æ—è –º–æ–¥–µ–ª—å —ç—Ç–æ —á–∏—Å–ª–æ üôÖ‚Äç‚ôÇÔ∏è')
    .required('–Ω–∞–ø–∏—à–∏ —Å–≤–æ—é –º–æ–¥–µ–ª—å! üßê')
    .integer('–º–æ–¥–µ–ª—å - —ç—Ç–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!')
    .min(100, '—Ç–≤–æ—è –º–æ–¥–µ–ª—å –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 100!')
    .max(1000, '—Ç—ã –Ω–µ —Ç–∞–∫–æ–π —Ä–æ–±–æ—Ç! –º–æ–¥–µ–ª—å –¥–æ 1000...'),
  creator: Yup
    .string()
    .required('—Å–∫–∞–∂–∏ –∫—Ç–æ —Ç–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üë©‚Äçüî¨'),
  email: Yup
    .string()
    .email('–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email üëæ')
    .required('email —Ç–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω üòë')
    .max(50, '50')
});

const RobotForm = () => {


  const formik = useFormik({
    initialValues: {
      model: '',
      creator: '',
      email: ''
    } as IFormValues,
    // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ö–µ–º—ã –∏–∑ Yup
    validationSchema: schema,
    // —É–±–∏—Ä–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –≤ input
    validateOnChange: false,
    onSubmit: (values, {resetForm}) => {
      console.log(values);
      resetForm()
    }
  });


  return (
    <>
      <form onSubmit={formik.handleSubmit} className={styles.robotForm}>
        <label>–≠—Ç–æ —Ñ–æ—Ä–º–∞ –¥–ª—è ü§ñ</label>
        <input value={formik.values.model} onChange={formik.handleChange} type="text" name='model' placeholder='–≤–∞—à–∞ –º–æ–¥–µ–ª—å' />
        <input value={formik.values.creator} onChange={formik.handleChange} type="text" name='creator' placeholder='–∏–º—è —Å–æ–∑–¥–∞—Ç–µ–ª—è' />
        <input value={formik.values.email} onChange={formik.handleChange} type="text" name='email' placeholder='email –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è' />
        <button type='submit'>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      </form>
      {/* –∑–Ω–∞—á–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–∞—Ö –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ formik.errors */}
      <span className={styles.errors}>{formik.errors.model}</span>
      <span className={styles.errors}>{formik.errors.creator}</span>
      <span className={styles.errors}>{formik.errors.email}</span>
    </>
  );
};

export default RobotForm;